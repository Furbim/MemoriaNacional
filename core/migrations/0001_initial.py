# Generated by Django 5.2.3 on 2025-06-15 23:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_principal', models.CharField(max_length=200, verbose_name='Nome Principal')),
                ('outros_nomes', models.CharField(blank=True, max_length=500, null=True, verbose_name='Outros Nomes')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('naturalidade', models.CharField(blank=True, max_length=150, null=True, verbose_name='Naturalidade')),
                ('data_obito', models.DateField(blank=True, null=True, verbose_name='Data do Óbito')),
            ],
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoFuncao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ElencoEpisodio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personagem', models.CharField(blank=True, max_length=200, null=True, verbose_name='Personagem')),
                ('artista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artista', verbose_name='Adicionar Artista')),
            ],
        ),
        migrations.CreateModel(
            name='ElencoFilme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personagem', models.CharField(blank=True, max_length=200, null=True, verbose_name='Personagem')),
                ('artista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.artista', verbose_name='Adicionar Artista')),
            ],
        ),
        migrations.CreateModel(
            name='Episodio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField(verbose_name='Número')),
                ('titulo', models.CharField(max_length=255, verbose_name='Título (Idioma)')),
                ('outros_titulos', models.CharField(blank=True, max_length=500, null=True, verbose_name='Outros títulos (Idioma)')),
                ('sinopse', models.TextField(blank=True, null=True)),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='imagens/episodios/')),
                ('data_exibicao', models.DateField(blank=True, null=True, verbose_name='Data de Exibição')),
                ('duracao', models.PositiveIntegerField(blank=True, help_text='Duração em minutos', null=True, verbose_name='Duração (min)')),
                ('elenco', models.ManyToManyField(blank=True, through='core.ElencoEpisodio', to='core.artista')),
            ],
            options={
                'ordering': ['temporada', 'numero'],
            },
        ),
        migrations.AddField(
            model_name='elencoepisodio',
            name='episodio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.episodio'),
        ),
        migrations.CreateModel(
            name='Filme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_original', models.CharField(max_length=255, verbose_name='Título Original (Idioma)')),
                ('outros_titulos', models.CharField(blank=True, max_length=500, null=True, verbose_name='Outros Títulos (Idioma)')),
                ('sinopse', models.TextField(blank=True, null=True)),
                ('data_estreia', models.DateField(blank=True, null=True, verbose_name='Estreia')),
                ('observacao_estreia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Observação')),
                ('classificacao_indicativa', models.CharField(blank=True, max_length=50, null=True, verbose_name='Classificação')),
                ('duracao', models.CharField(blank=True, help_text='Formato: 00h00min', max_length=10, null=True, verbose_name='Duração')),
                ('paises_origem', models.CharField(blank=True, max_length=255, null=True, verbose_name='País de Origem')),
                ('idioma_original', models.CharField(blank=True, max_length=50, null=True, verbose_name='Idioma de Origem')),
                ('site_oficial', models.URLField(blank=True, null=True, verbose_name='Site oficial')),
                ('link_trailer', models.URLField(blank=True, null=True, verbose_name='Trailer (Player de Vídeo)')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='posters/filmes/', verbose_name='Pôsteres Principais')),
                ('distribuicao', models.ManyToManyField(blank=True, related_name='filmes_distribuidos', to='core.empresa', verbose_name='Distribuição (Empresa)')),
                ('elenco', models.ManyToManyField(blank=True, through='core.ElencoFilme', to='core.artista', verbose_name='Elenco e Equipe Técnica')),
                ('producao', models.ManyToManyField(blank=True, related_name='filmes_produzidos', to='core.empresa', verbose_name='Produção (Empresas)')),
                ('generos', models.ManyToManyField(blank=True, to='core.genero')),
            ],
        ),
        migrations.AddField(
            model_name='elencofilme',
            name='filme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.filme'),
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_original', models.CharField(max_length=255, verbose_name='Título Original (Idioma)')),
                ('outros_titulos', models.CharField(blank=True, max_length=500, null=True, verbose_name='Outros títulos (Idioma)')),
                ('sinopse', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('em_exibicao', 'Em Exibição'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada'), ('piloto', 'Piloto')], default='em_exibicao', max_length=20)),
                ('classificacao_indicativa', models.CharField(blank=True, max_length=50, null=True, verbose_name='Classificação')),
                ('paises_origem', models.CharField(blank=True, max_length=255, null=True, verbose_name='País de Origem')),
                ('idioma_original', models.CharField(blank=True, max_length=50, null=True, verbose_name='Idioma de Origem')),
                ('site_oficial', models.URLField(blank=True, null=True, verbose_name='Site oficial')),
                ('link_trailer', models.URLField(blank=True, null=True, verbose_name='Trailer (Player de Vídeo)')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='posters/series/')),
                ('emissora', models.ManyToManyField(blank=True, related_name='series_exibidas', to='core.empresa')),
                ('generos', models.ManyToManyField(blank=True, to='core.genero')),
                ('producao', models.ManyToManyField(blank=True, related_name='series_produzidas', to='core.empresa', verbose_name='Produção (Empresas)')),
            ],
        ),
        migrations.CreateModel(
            name='Temporada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField(verbose_name='Número')),
                ('titulo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Título (Idioma)')),
                ('outros_titulos', models.CharField(blank=True, max_length=500, null=True, verbose_name='Outros títulos (Idioma)')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='posters/temporadas/', verbose_name='Imagem (Pôster)')),
                ('serie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporadas', to='core.serie')),
            ],
            options={
                'ordering': ['serie', 'numero'],
                'unique_together': {('serie', 'numero')},
            },
        ),
        migrations.AddField(
            model_name='episodio',
            name='temporada',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodios', to='core.temporada'),
        ),
        migrations.AddField(
            model_name='elencofilme',
            name='funcao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tipofuncao', verbose_name='Tipo'),
        ),
        migrations.AddField(
            model_name='elencoepisodio',
            name='funcao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.tipofuncao', verbose_name='Tipo'),
        ),
        migrations.AlterUniqueTogether(
            name='episodio',
            unique_together={('temporada', 'numero')},
        ),
    ]
